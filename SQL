-- ** Bussiness request 1. 

-- city level fare and trip summary report

select dc.city_name as City_Name,
count(ft.trip_id) as Total_trips, 
round(sum(ft.fare_amount)/nullif(sum(ft.distance_travelled_km),0),2) as Avg_Fare_Per_KM,
round(sum(ft.fare_amount),2) as Avg_fare_per_trip,
round((COUNT(ft.trip_id) * 100.0 / (SELECT COUNT(*) FROM fact_trips)), 2) AS Percentage_Contribution_of_Total_Trips
from dim_city dc
join fact_trips ft
on dc.city_id = ft.city_id
group by dc.city_name
order by Total_trips desc;

-- ** Business Request -2:
-- Monthly city level Trips target performance report

SELECT 
    dc.city_name,
    dd.month_name, 
    COUNT(ft.trip_id) AS actual_trips,
    tt.total_target_trips,
    CASE 
        WHEN COUNT(ft.trip_id) > tt.total_target_trips THEN 'Above Target'
        ELSE 'Below Target'
    END AS performance_status,
    ((COUNT(ft.trip_id) - tt.total_target_trips) * 100.0 / tt.total_target_trips) AS percentage_difference
FROM 
    trips_db.fact_trips ft
JOIN 
    trips_db.dim_city dc 
ON 
    ft.city_id = dc.city_id
JOIN 
    trips_db.dim_date dd 
ON 
    ft.date = dd.date 
JOIN 
    targets_db.monthly_target_trips tt 
ON 
    ft.city_id = tt.city_id AND dd.start_of_month = tt.month  
GROUP BY 
    dc.city_name, dd.month_name, tt.total_target_trips
LIMIT 0, 1000;


-- ** Business Request .3 
-- City Level Repeat Passenger trip Frequency report


select dc.city_name as City_Name,
ROUND(SUM(CASE WHEN rtd.trip_count = 2 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `2-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 3 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `3-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 4 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `4-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 5 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `5-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 6 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `6-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 7 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `7-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 8 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `8-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 9 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `9-Trips`,
ROUND(SUM(CASE WHEN rtd.trip_count = 10 THEN rtd.repeat_passenger_count END) * 100.0 / NULLIF(SUM(rtd.repeat_passenger_count), 0), 2) AS `10-Trips`

from trips_db.dim_city dc
join trips_db.dim_repeat_trip_distribution rtd
on dc.city_id = rtd.city_id
group by dc.city_name
order by dc.city_name;

-- ** Business Request 4:

-- Identify cities with highest and lowest total new passengers.

With CityPassengerTotal as

(
select dc.city_name as City_Name,
sum(mtnp.target_new_passengers) as TotalPassenger

from trips_db.dim_city dc
join targets_db.monthly_target_new_passengers mtnp
on dc.city_id = mtnp.city_id
group by dc.city_name
),
Rankedcities as
(
select City_Name,TotalPassenger,
rank() over (order by TotalPassenger desc) as Rank_Desc,
rank() over (order by TotalPassenger asc) as Rank_Asc

from CityPassengerTotal
)

select City_Name, TotalPassenger,
case
when Rank_Desc <= 3 then 'Top3'
when Rank_Asc <= 3 then 'Bottom3'
else null
end as City_Category
from Rankedcities 
where Rank_Desc <= 3 or Rank_Asc <=3
order by City_Category,TotalPassenger desc;


-- ** Business Request 5

-- Identify Month with Highest Revenue for each city

with CityRev as

(
select 
dc.city_name as City_Name,
dd.month_name as Month_Name,
sum(ft.fare_amount) as MonthlyRevenue,
sum(sum(ft.fare_amount)) over (partition by dc.city_name) as TotalCity_Rev

from trips_db.fact_trips ft
join trips_db.dim_city dc on ft.city_id = dc.city_id
join trips_db.dim_date dd on ft.date = dd.date

group by dc.city_name,dd.month_name
),
CityHighestRevenue AS (
    SELECT 
        City_Name,
        Month_Name AS Highest_Revenue_Month,
        MonthlyRevenue AS Revenue,
        ROUND((MonthlyRevenue * 100.0 / NULLIF(TotalCity_Rev, 0)), 2) AS PercentageContribution,
        RANK() OVER (PARTITION BY City_Name ORDER BY MonthlyRevenue DESC) AS RevenueRank
    FROM 
        CityRev
)
SELECT 
    City_Name,
    Highest_Revenue_Month,
    Revenue,
    PercentageContribution
FROM 
    CityHighestRevenue
WHERE 
    RevenueRank = 1
ORDER BY 
    City_Name;

-- ** Business Request 6:

-- Repeat Passenger Rate Analysis
SELECT 
    dc.city_name,
    dd.month_name,
    SUM(fps.repeat_passengers) AS repeat_passengers,
    SUM(fps.total_passengers) AS total_passengers,
    (SUM(fps.repeat_passengers) * 100.0 / SUM(fps.total_passengers)) AS repeat_passenger_rate
FROM 
    trips_db.fact_passenger_summary fps
JOIN 
    trips_db.dim_city dc 
ON 
    fps.city_id = dc.city_id
JOIN 
    trips_db.dim_date dd 
ON 
    fps.month = dd.start_of_month
GROUP BY 
    dc.city_name, dd.month_name
ORDER BY 
    repeat_passenger_rate DESC;

